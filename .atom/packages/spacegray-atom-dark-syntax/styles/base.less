@import "syntax-variables";

atom-text-editor {
    color: @syntax-text-color;
    background-color: @syntax-background-color;
}

atom-text-editor {
    .wrap-guide {
        background-color: @syntax-wrap-guide-color;
    }

    .indent-guide {
        color: @syntax-indent-guide-color;
    }

    .invisible-character {
        color: @syntax-invisible-character-color;
    }

    .gutter {
        color: @syntax-gutter-text-color;
        background-color: @syntax-gutter-background-color;
        .line-number {
            &.cursor-line {
                color: @syntax-gutter-text-color-selected;
                background-color: darken(@syntax-gutter-background-color-selected, 5%);
            }
            &.cursor-line-no-selection {
                color: @syntax-gutter-text-color-selected;
            }
        }
    }

    .gutter .line-number.folded,
    .gutter .line-number:after,
    .fold-marker:after {
        color: @light-gray;
    }

    .invisible {
        color: @syntax-text-color;
    }

    .cursor {
        color: @syntax-cursor-color;
    }

    .invisible-character {
        color: @syntax-invisible-character-color;
    }

    .selection .region {
        background-color: @syntax-selection-color;
    }

    .search-results .syntax--marker .region {
        border: 1px solid @syntax-result-marker-color;
        background-color: transparent;
    }

    .search-results .syntax--marker.current-result .region {
        border: 1px solid @syntax-result-marker-color-selected;
    }
}

.syntax {
    &--comment {
        color: @light-gray;
    }

    &--entity {
        &.syntax--name.syntax--type {
            text-decoration: underline;

            color: @light-orange;
        }

        &.syntax--other.syntax--inherited-class {
            color: @green;
        }
    }

    &--keyword {
        color: @purple;

        &.syntax--control {
            color: @purple;
        }

        &.syntax--operator {
            color: @syntax-text-color;
        }

        &.syntax--other.syntax--special-method {
            color: @blue;
        }

        &.syntax--other.syntax--unit {
            color: @orange;
        }
    }

    &--storage {
        color: @purple;
    }

    &--constant {
        color: @orange;

        &.syntax--character.syntax--escape {
            color: @cyan;
        }

        &.syntax--numeric {
            color: @orange;
        }

        &.syntax--other.syntax--color {
            color: @cyan;
        }

        &.syntax--other.syntax--symbol {
            color: @green;
        }
    }

    &--variable {
        color: @red;

        &.syntax--interpolation {
            color: darken(@red, 10%);
        }

        &.syntax--parameter.syntax--function {
            color: @syntax-text-color;
        }
    }

    &--invalid.syntax--illegal {
        color: @syntax-background-color;
        background-color: @red;
    }

    &--string {
        color: @green;

        &.syntax--regexp {
            color: @cyan;

            .syntax--source.syntax--ruby.syntax--embedded {
                color: @orange;
            }
        }

        &.syntax--other.syntax--link {
            color: @red;
        }
    }

    &--punctuation {
        &.syntax--definition {
            &.syntax--comment {
                color: @light-gray;
            }

            &.syntax--string,
            &.syntax--variable,
            &.syntax--parameters,
            &.syntax--array {
                color: @syntax-text-color;
            }

            &.syntax--heading,
            &.syntax--identity {
                color: @blue;
            }

            &.syntax--bold {
                color: @light-orange;

                font-style: bold;
            }

            &.syntax--italic {
                color: @purple;

                font-style: italic;
            }
        }

        &.syntax--section.syntax--embedded {
            color: darken(@red, 10%);
        }
    }

    &--support {
        &.syntax--class {
            color: @light-orange;
        }

        &.syntax--function  {
            color: @cyan;

            &.syntax--any-method {
                color: @blue;
            }
        }
    }

    &--entity {
        &.syntax--name.syntax--function {
            color: @blue;
        }

        &.syntax--name.syntax--class, &.syntax--name.syntax--type.syntax--class {
            color: @light-orange;
        }

        &.syntax--name.syntax--section {
            color: @blue;
        }

        &.syntax--name.syntax--tag {
            text-decoration: underline;

            color: @red;
        }

        &.syntax--other.syntax--attribute-name {
            color: @orange;

            &.syntax--id {
                color: @blue;
            }
        }
    }

    &--meta {
        &.syntax--class {
            color: @light-orange;
        }

        &.syntax--link {
            color: @orange;
        }

        &.syntax--require {
            color: @blue;
        }

        &.syntax--selector {
            color: @purple;
        }

        &.syntax--separator {
            color: @syntax-text-color;
            background-color: @gray;
        }
    }

    &--none {
        color: @syntax-text-color;
    }

    &--markup {
        &.syntax--bold {
            color: @orange;

            font-style: bold;
        }

        &.syntax--changed {
            color: @purple;
        }

        &.syntax--deleted {
            color: @red;
        }

        &.syntax--italic {
            color: @purple;

            font-style: italic;
        }

        &.syntax--heading .syntax--punctuation.syntax--definition.syntax--heading {
            color: @blue;
        }

        &.syntax--inserted {
            color: @green;
        }

        &.syntax--list {
            color: @red;
        }

        &.syntax--quote {
            color: @orange;
        }

        &.syntax--raw.syntax--inline {
            color: @green;
        }
    }
}


.syntax--source.syntax--gfm .syntax--markup {
    -webkit-font-smoothing: auto;

    &.syntax--heading {
        color: @green;
    }
}

atom-text-editor.mini .scroll-view {
    padding-left: 1px;
}
